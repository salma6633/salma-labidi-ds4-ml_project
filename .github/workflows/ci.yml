name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Utilisez une version de Python plus courante

      - name: Create and activate virtual environment
        run: |
          python -m venv venv
          ls -la venv/bin  # Vérifiez si le répertoire venv/bin existe
          source venv/bin/activate

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          make -f Makefile setup

  lint-format:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Linting with mypy
        run: |
          source venv/bin/activate
          make lint

      - name: Formatting check with black
        run: |
          source venv/bin/activate
          make format

  data-train:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Préparer les données
        run: |
          source venv/bin/activate
          make data

      - name: Entraîner le modèle
        run: |
          source venv/bin/activate
          make train

  tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Run unit tests
        run: |
          source venv/bin/activate
          make test

  docker:
    needs: [tests, data-train]
    runs-on: ubuntu-latest
    steps:
      - name: Build Docker image
        run: |
          source venv/bin/activate
          make build-docker

      - name: Push Docker image to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
          make push-docker

  notification:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "CI/CD Pipeline Status - ${{ job.status }}"
          body: "Le pipeline GitHub Actions est terminé avec le statut : ${{ job.status }}"
          to: "tonemail@example.com"
          from: "github-actions@example.com"
