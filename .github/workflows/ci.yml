name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      elasticsearch:
        image: elasticsearch:8.13.2
        ports:
          - 9200:9200
        env:
          discovery.type: single-node  # Ensures single-node setup
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"  # Limits memory usage
        options: >-
          --health-cmd "curl -f http://localhost:9200/_cluster/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m venv venv
        . venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install xgboost lifelines

    # Set Elasticsearch host to localhost for CI environment
    - name: Prepare data
      env:
        ELASTICSEARCH_HOST: localhost
      run: |
        . venv/bin/activate
        python main.py --step prepare --data data_churn.csv

    # Include other steps (train, test, etc.) similarly if they require Elasticsearch
    - name: Train the model
      env:
        ELASTICSEARCH_HOST: localhost
      run: |
        . venv/bin/activate
        python main.py --step train

    # Remaining steps (lint, test, etc.) remain unchanged
    - name: Run linting
      run: |
        . venv/bin/activate
        mypy --ignore-missing-imports --exclude venv .

    - name: Run tests with pytest
      run: |
        . venv/bin/activate
        pytest --maxfail=1 --disable-warnings -q

    # Other steps (Docker build, push, etc.)
